name: Model Training and Deployment

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:  # Allow manual trigger

jobs:
  train-model:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python 3.9
      uses: actions/setup-python@v4
      with:
        python-version: 3.9
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Create artifacts directory
      run: |
        mkdir -p Model/artifacts
    
    - name: Check dataset exists
      run: |
        if [ ! -f "Data/01_Raw/oral_cancer_prediction_dataset.csv" ]; then
          echo "Dataset not found! Please ensure the dataset is in the repository."
          exit 1
        fi
        echo "Dataset found, proceeding with training..."
    
    - name: Train model
      run: |
        cd Model
        python model_training.py
      env:
        PYTHONPATH: ${{ github.workspace }}
    
    - name: Validate model artifacts
      run: |
        if [ ! -d "Model/artifacts" ] || [ -z "$(ls -A Model/artifacts)" ]; then
          echo "Model artifacts not created!"
          exit 1
        fi
        ls -la Model/artifacts/
    
    - name: Upload model artifacts
      uses: actions/upload-artifact@v4
      with:
        name: trained-model-${{ github.sha }}
        path: Model/artifacts/
        retention-days: 30
    
    - name: Test model inference
      run: |
        cd Model
        python model_inference.py
      env:
        PYTHONPATH: ${{ github.workspace }}

  build-docker:
    needs: train-model
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Download model artifacts
      uses: actions/download-artifact@v4
      with:
        name: trained-model-${{ github.sha }}
        path: Model/artifacts/
    
    - name: Build Docker image
      run: |
        docker build -t oral-cancer-app:latest .
    
    - name: Save Docker image
      run: |
        docker save oral-cancer-app:latest | gzip > oral-cancer-app.tar.gz
    
    - name: Upload Docker image
      uses: actions/upload-artifact@v4
      with:
        name: docker-image-${{ github.sha }}
        path: oral-cancer-app.tar.gz
        retention-days: 7
    
    - name: Deployment summary
      run: |
        echo "✅ Model training completed"
        echo "✅ Docker image built"
        echo "✅ Ready for deployment" 